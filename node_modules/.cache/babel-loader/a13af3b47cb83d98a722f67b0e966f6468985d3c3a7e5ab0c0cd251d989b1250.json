{"ast":null,"code":"var _jsxFileName = \"/Users/cooperroper/my_projects/Wordle_Helper/wordle_helper/src/Components/RowList/RowList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport GreenRow from '../GreenRow/GreenRow';\nimport YellowRow from '../YellowRow/YellowRow';\n\n// create 5 rows in a vertical fashion\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RowList = () => {\n  _s();\n  const [rows, setRows] = useState([/*#__PURE__*/_jsxDEV(GreenRow, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 39\n  }, this), /*#__PURE__*/_jsxDEV(YellowRow, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 53\n  }, this)]);\n  const createYellow = () => {\n    setRows([...rows, /*#__PURE__*/_jsxDEV(YellowRow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 27\n    }, this)]);\n  };\n  const deleteYellow = () => {\n    if (rows.length === 2) {\n      return;\n    }\n    setRows(rows.slice(0, -1));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createYellow,\n      children: \"Add Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteYellow,\n      children: \"Delete Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), rows.map(row => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: row\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      readOnly: true,\n      value: text,\n      onChange: handleChange,\n      style: {\n        height: \"auto\",\n        minHeight: \"50px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(RowList, \"1Y2jUPZvOJNGK/8mPIIvx+MzfJ4=\");\n_c = RowList;\nexport default RowList;\nvar _c;\n$RefreshReg$(_c, \"RowList\");","map":{"version":3,"names":["React","useState","GreenRow","YellowRow","jsxDEV","_jsxDEV","RowList","_s","rows","setRows","fileName","_jsxFileName","lineNumber","columnNumber","createYellow","deleteYellow","length","slice","children","onClick","map","row","readOnly","value","text","onChange","handleChange","style","height","minHeight","_c","$RefreshReg$"],"sources":["/Users/cooperroper/my_projects/Wordle_Helper/wordle_helper/src/Components/RowList/RowList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport GreenRow from '../GreenRow/GreenRow';\nimport YellowRow from '../YellowRow/YellowRow';\n\n// create 5 rows in a vertical fashion\nconst RowList = () => {\n    const [rows, setRows] = useState([<GreenRow />, <YellowRow />]);\n\n    const createYellow = () => {\n        setRows([...rows, <YellowRow />]);\n    };\n\n    const deleteYellow = () => {\n        if (rows.length === 2) {\n            return;\n        }\n        setRows(rows.slice(0, -1));\n    };\n\n    return(\n        <div>\n            <button onClick={createYellow}>Add Row</button>\n            <button onClick={deleteYellow}>Delete Row</button>\n            {/* create elements in rows state */}\n            {rows.map((row) => (\n                <div>\n                    {row}\n                </div>\n            ))}\n            <textarea\n                readOnly={true}\n                value={text}\n                onChange={handleChange}\n                style={{ height: \"auto\", minHeight: \"50px\" }}\n            />\n        </div>\n    );\n}\n\nexport default RowList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,SAAS,MAAM,wBAAwB;;AAE9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,cAACI,OAAA,CAACH,QAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eAAER,OAAA,CAACF,SAAS;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC,CAAC;EAE/D,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvBL,OAAO,CAAC,CAAC,GAAGD,IAAI,eAAEH,OAAA,CAACF,SAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC,CAAC;EACrC,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIP,IAAI,CAACQ,MAAM,KAAK,CAAC,EAAE;MACnB;IACJ;IACAP,OAAO,CAACD,IAAI,CAACS,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC;EAED,oBACIZ,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAQc,OAAO,EAAEL,YAAa;MAAAI,QAAA,EAAC;IAAO;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/CR,OAAA;MAAQc,OAAO,EAAEJ,YAAa;MAAAG,QAAA,EAAC;IAAU;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAEjDL,IAAI,CAACY,GAAG,CAAEC,GAAG,iBACVhB,OAAA;MAAAa,QAAA,EACKG;IAAG;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACR,CAAC,eACFR,OAAA;MACIiB,QAAQ,EAAE,IAAK;MACfC,KAAK,EAAEC,IAAK;MACZC,QAAQ,EAAEC,YAAa;MACvBC,KAAK,EAAE;QAAEC,MAAM,EAAE,MAAM;QAAEC,SAAS,EAAE;MAAO;IAAE;MAAAnB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAAN,EAAA,CAhCKD,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AAkCb,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}