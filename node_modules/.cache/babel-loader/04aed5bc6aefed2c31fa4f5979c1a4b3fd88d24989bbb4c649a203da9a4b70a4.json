{"ast":null,"code":"var _jsxFileName = \"/Users/cooperroper/my_projects/Wordle_Helper/wordle_helper/src/Components/RowList/RowList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Row from '../Row/Row';\nimport \"./RowList.css\";\nimport ResultsProvider from \"../ResultsProvider\";\nimport VirtualKeyboard from \"../Keyboard/Keyboard\";\nimport useKeyboardHandler from \"../Keyboard/Handler\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RowList = () => {\n  _s();\n  const [rowStates, setRowStates] = useState([{\n    'array': [],\n    'color': \"green\"\n  }, {\n    'array': [],\n    'color': \"yellow\"\n  }]);\n  const [results, setResults] = useState('');\n  const [selectedPosition, setSelectedPosition] = useState({\n    row: 0,\n    col: 0\n  });\n  const [grays, setGrays] = useState([]);\n  const handleKeyboardClick = key => {\n    setGrays(prevGrays => {\n      if (prevGrays.includes(key)) {\n        return prevGrays.filter(gray => gray !== key);\n      } else {\n        return [...prevGrays, key];\n      }\n    });\n  };\n  const handleKey = (row, col, key) => {\n    const newRowStates = [...rowStates];\n    newRowStates[row].array[col] = key;\n    setRowStates(newRowStates);\n  };\n  const handleInputClick = pos => {\n    setSelectedPosition(pos);\n  };\n  const isAlpha = function (ch) {\n    return /^[A-Z]$/i.test(ch);\n  };\n  const position = useKeyboardHandler(selectedPosition, numRows, numCols, handleKey);\n  const createYellow = () => {\n    if (rowStates.length < 5) setRowStates([...rowStates, {\n      'array': [],\n      'color': \"yellow\"\n    }]);\n  };\n  const deleteYellow = () => {\n    if (rowStates.length > 1) setRowStates(rowStates.slice(0, -1));\n  };\n  const clearResults = () => {\n    setResults('');\n  };\n  const getRowComponent = (rowState, index) => {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      value: rowState['array'],\n      color: rowState['color'],\n      isFocused: index === selectedPosition.row,\n      row: index,\n      column: selectedPosition.col,\n      handleInputClick: handleInputClick\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this);\n  };\n  const getResults = () => {\n    const resultRows = [...rowStates];\n    resultRows.push({\n      'array': grays,\n      'color': \"gray\"\n    });\n    console.log(resultRows);\n    const results = ResultsProvider(resultRows);\n    setResults(results);\n  };\n  return (\n    /*#__PURE__*/\n    //put into rows\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row-container\",\n        children: [rowStates.map((rowState, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rows\",\n          children: getRowComponent(rowState, index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)), /*#__PURE__*/_jsxDEV(VirtualKeyboard, {\n          handleClick: handleKeyboardClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-container\",\n          children: results ? results.map((result, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: result\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 26\n          }, this)) : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            background: 'lightyellow'\n          },\n          onClick: createYellow,\n          children: \" + \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            background: 'lightyellow'\n          },\n          onClick: deleteYellow,\n          children: \" - \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            background: 'lightgreen'\n          },\n          onClick: getResults,\n          children: \" = \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            background: 'pink'\n          },\n          onClick: clearResults,\n          children: \" x \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(RowList, \"kUVMfbSRjJpin6sad9UiSex7U08=\", false, function () {\n  return [useKeyboardHandler];\n});\n_c = RowList;\nexport default RowList;\nvar _c;\n$RefreshReg$(_c, \"RowList\");","map":{"version":3,"names":["React","useEffect","useState","Row","ResultsProvider","VirtualKeyboard","useKeyboardHandler","jsxDEV","_jsxDEV","RowList","_s","rowStates","setRowStates","results","setResults","selectedPosition","setSelectedPosition","row","col","grays","setGrays","handleKeyboardClick","key","prevGrays","includes","filter","gray","handleKey","newRowStates","array","handleInputClick","pos","isAlpha","ch","test","position","numRows","numCols","createYellow","length","deleteYellow","slice","clearResults","getRowComponent","rowState","index","value","color","isFocused","column","fileName","_jsxFileName","lineNumber","columnNumber","getResults","resultRows","push","console","log","children","className","map","handleClick","result","style","background","onClick","_c","$RefreshReg$"],"sources":["/Users/cooperroper/my_projects/Wordle_Helper/wordle_helper/src/Components/RowList/RowList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Row from '../Row/Row';\nimport \"./RowList.css\";\nimport ResultsProvider from \"../ResultsProvider\";\nimport VirtualKeyboard from \"../Keyboard/Keyboard\";\nimport useKeyboardHandler from \"../Keyboard/Handler\";\n\nconst RowList = () => {\n    const [rowStates, setRowStates] = useState([{'array': [], 'color': \"green\"}, {'array': [], 'color': \"yellow\"}]);\n    const [results, setResults] = useState('');\n    const [selectedPosition, setSelectedPosition] = useState({ row: 0, col: 0 });\n    const [grays, setGrays] = useState([]);\n\n    const handleKeyboardClick = (key) => {\n        setGrays(prevGrays => {\n            if (prevGrays.includes(key)) {\n              return prevGrays.filter(gray => gray !== key);\n            }\n            else {\n              return [...prevGrays, key];\n            }\n          });\n    };\n\n    const handleKey = (row, col, key) => {\n        const newRowStates = [...rowStates];\n        newRowStates[row].array[col] = key;\n        setRowStates(newRowStates);\n    };\n\n    const handleInputClick = (pos) => {\n        setSelectedPosition(pos);\n    };\n\n    const isAlpha = function(ch){\n        return /^[A-Z]$/i.test(ch);\n    }\n\n    const position = useKeyboardHandler(\n        selectedPosition,\n        numRows,\n        numCols,\n        handleKey\n      );\n\n\n    const createYellow = () => {\n        if (rowStates.length < 5) \n            setRowStates([...rowStates, {'array': [], 'color': \"yellow\"}]);\n    };\n\n    const deleteYellow = () => {\n        if (rowStates.length > 1)\n            setRowStates(rowStates.slice(0, -1));\n    };\n\n    const clearResults = () => {\n        setResults('');\n    }\n\n    const getRowComponent = (rowState, index) => {\n        return (\n                <Row \n                    key={index} \n                    value={rowState['array']} \n                    color={rowState['color']} \n                    isFocused={index === selectedPosition.row}\n                    row = {index}\n                    column={selectedPosition.col}\n                    handleInputClick={handleInputClick}\n                />\n            );\n    };\n\n    const getResults = () => {\n        const resultRows = [...rowStates];\n        resultRows.push({'array': grays, 'color': \"gray\"});\n        console.log(resultRows);\n        const results = ResultsProvider(resultRows);\n        setResults(results);\n    }\n\n    return(\n        //put into rows\n        <div>\n            <div className=\"row-container\">\n                {/* create elements in rows state */}\n                {rowStates.map((rowState, index) => (\n                    <div key={index} className=\"rows\">\n                        {getRowComponent(rowState, index)}\n                    </div>\n                ))}\n                <VirtualKeyboard handleClick={handleKeyboardClick}/>\n                <div className=\"result-container\">\n                    {results ? results.map((result, index) => \n                        (<span key={index}>{result}</span>)) \n                    :''}\n                </div>\n            </div>\n            <div className=\"button-container\">\n                <button style={{background:'lightyellow'}} onClick={createYellow}> + </button>\n                <button style={{background:'lightyellow'}} onClick={deleteYellow}> - </button>\n                <button style={{background:'lightgreen'}} onClick={getResults}> = </button>\n                <button style={{background:'pink'}} onClick={clearResults}> x </button>\n            </div>\n        </div>\n    );\n}\n\nexport default RowList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}