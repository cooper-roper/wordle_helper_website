{"ast":null,"code":"var _jsxFileName = \"/Users/cooperroper/my_projects/Wordle_Helper/wordle_helper/src/Components/GreenRow/GreenRow.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"./GreenRow.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GreenRow = _ref => {\n  _s();\n  let {\n    value,\n    onChange\n  } = _ref;\n  const [letterList, setLetterList] = useState(Array(5).fill(''));\n  const inputRefs = useRef([]);\n  const handleInputChange = (index, event) => {\n    const newValue = [...value];\n    newValue[index] = event.target.value;\n    onChange(newValue);\n    if (event.target.value === \"\" && index > 0) {\n      inputRefs.current[index - 1].focus();\n    } else if (event.target.value !== \"\" && index < 4) {\n      inputRefs.current[index + 1].focus();\n    }\n  };\n  useEffect(() => {\n    inputRefs.current[0].focus();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Row\",\n      children: [...Array(5).keys()].map(index => /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"GreenInput\",\n        ref: ref => inputRefs.current[index] = ref,\n        index: index,\n        value: value[index],\n        maxLength: 1,\n        onChange: e => handleInputChange(index, e)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(GreenRow, \"oNmRDar10TLjB0a4Ut2ea/Day1g=\");\n_c = GreenRow;\nexport default GreenRow;\nvar _c;\n$RefreshReg$(_c, \"GreenRow\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","GreenRow","_ref","_s","value","onChange","letterList","setLetterList","Array","fill","inputRefs","handleInputChange","index","event","newValue","target","current","focus","children","className","keys","map","ref","maxLength","e","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cooperroper/my_projects/Wordle_Helper/wordle_helper/src/Components/GreenRow/GreenRow.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport \"./GreenRow.css\";\n\nconst GreenRow = ({ value, onChange }) => {\n    const [letterList, setLetterList] = useState(Array(5).fill(''));\n    const inputRefs = useRef([]);\n\n    const handleInputChange = (index, event) => {\n        const newValue = [...value];\n        newValue[index] = event.target.value;\n        onChange(newValue);\n\n        if ((event.target.value === \"\") && index > 0) {\n            inputRefs.current[index - 1].focus();\n        }\n        else if (event.target.value !== \"\" && index < 4) {\n            inputRefs.current[index + 1].focus();\n        }\n    };\n\n    useEffect(() => {\n        inputRefs.current[0].focus();\n    }, []);\n    \n\n    return(\n        <div>\n            <div className=\"Row\">\n                {/* create 5 text input fields using a loop*/}\n                {[...Array(5).keys()].map((index) => (\n                    <input \n                        className=\"GreenInput\"\n                        key={index} \n                        ref={(ref) => (inputRefs.current[index] = ref)}\n                        index={index}\n                        value={value[index]} \n                        maxLength={1} \n                        onChange={(e) => handleInputChange(index, e)}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default GreenRow;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGC,IAAA,IAAyB;EAAAC,EAAA;EAAA,IAAxB;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAAH,IAAA;EACjC,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAACW,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;EAC/D,MAAMC,SAAS,GAAGZ,MAAM,CAAC,EAAE,CAAC;EAE5B,MAAMa,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IACxC,MAAMC,QAAQ,GAAG,CAAC,GAAGV,KAAK,CAAC;IAC3BU,QAAQ,CAACF,KAAK,CAAC,GAAGC,KAAK,CAACE,MAAM,CAACX,KAAK;IACpCC,QAAQ,CAACS,QAAQ,CAAC;IAElB,IAAKD,KAAK,CAACE,MAAM,CAACX,KAAK,KAAK,EAAE,IAAKQ,KAAK,GAAG,CAAC,EAAE;MAC1CF,SAAS,CAACM,OAAO,CAACJ,KAAK,GAAG,CAAC,CAAC,CAACK,KAAK,CAAC,CAAC;IACxC,CAAC,MACI,IAAIJ,KAAK,CAACE,MAAM,CAACX,KAAK,KAAK,EAAE,IAAIQ,KAAK,GAAG,CAAC,EAAE;MAC7CF,SAAS,CAACM,OAAO,CAACJ,KAAK,GAAG,CAAC,CAAC,CAACK,KAAK,CAAC,CAAC;IACxC;EACJ,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACZc,SAAS,CAACM,OAAO,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAGN,oBACIjB,OAAA;IAAAkB,QAAA,eACIlB,OAAA;MAAKmB,SAAS,EAAC,KAAK;MAAAD,QAAA,EAEf,CAAC,GAAGV,KAAK,CAAC,CAAC,CAAC,CAACY,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAET,KAAK,iBAC5BZ,OAAA;QACImB,SAAS,EAAC,YAAY;QAEtBG,GAAG,EAAGA,GAAG,IAAMZ,SAAS,CAACM,OAAO,CAACJ,KAAK,CAAC,GAAGU,GAAK;QAC/CV,KAAK,EAAEA,KAAM;QACbR,KAAK,EAAEA,KAAK,CAACQ,KAAK,CAAE;QACpBW,SAAS,EAAE,CAAE;QACblB,QAAQ,EAAGmB,CAAC,IAAKb,iBAAiB,CAACC,KAAK,EAAEY,CAAC;MAAE,GALxCZ,KAAK;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMb,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACzB,EAAA,CAxCIF,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}