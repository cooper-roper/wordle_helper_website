{"ast":null,"code":"var _jsxFileName = \"/Users/cooperroper/my_projects/Wordle_Helper/wordle_helper/src/Components/RowList/RowList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport GreenRow from '../GreenRow/GreenRow';\nimport YellowRow from '../YellowRow/YellowRow';\nimport \"./RowList.css\";\nimport ResultsProvider from \"../ResultsProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RowList = () => {\n  _s();\n  const [rowStates, setRowStates] = useState([{\n    'array': [],\n    'color': \"green\"\n  }, {\n    'array': [],\n    'color': \"yellow\"\n  }]);\n  const [results, setResults] = useState('');\n  const createYellow = () => {\n    if (rowStates.length >= 5) return;\n    setRowStates([...rowStates, {\n      'array': [],\n      'color': \"yellow\"\n    }]);\n  };\n  const deleteYellow = () => {\n    if (rowStates.length <= 2) return;\n    setRowStates(rowStates.slice(0, -1));\n  };\n  const handleInputChange = (index, letterList) => {\n    const newRowStates = [...rowStates];\n    newRowStates[index]['array'] = letterList;\n    setRowStates(newRowStates);\n  };\n  const getRowComponent = index => {\n    if (index === 0) {\n      return /*#__PURE__*/_jsxDEV(GreenRow, {\n        value: rowStates[index]['array'],\n        onChange: e => handleInputChange(index, e)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(YellowRow, {\n        value: rowStates[index]['array'],\n        onChange: e => handleInputChange(index, e)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 20\n      }, this);\n    }\n  };\n  const getResults = () => {\n    const results = ResultsProvider(rowStates);\n    console.log(results);\n    setResults(results);\n  };\n  return (\n    /*#__PURE__*/\n    //put into rows\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row-container\",\n        children: [rowStates.map((rowState, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: getRowComponent(index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-container\",\n          children: results ? results.map(result => /*#__PURE__*/_jsxDEV(\"text\", {\n            style: {\n              color: \"black\"\n            },\n            children: [result, \", \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)) : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createYellow,\n          children: \" + \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deleteYellow,\n          children: \" - \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getResults,\n          children: \" = \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(RowList, \"04NVs8UCi84q2OncsYrwHUO5XMg=\");\n_c = RowList;\nexport default RowList;\nvar _c;\n$RefreshReg$(_c, \"RowList\");","map":{"version":3,"names":["React","useState","GreenRow","YellowRow","ResultsProvider","jsxDEV","_jsxDEV","RowList","_s","rowStates","setRowStates","results","setResults","createYellow","length","deleteYellow","slice","handleInputChange","index","letterList","newRowStates","getRowComponent","value","onChange","e","fileName","_jsxFileName","lineNumber","columnNumber","getResults","console","log","children","className","map","rowState","result","style","color","onClick","_c","$RefreshReg$"],"sources":["/Users/cooperroper/my_projects/Wordle_Helper/wordle_helper/src/Components/RowList/RowList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport GreenRow from '../GreenRow/GreenRow';\nimport YellowRow from '../YellowRow/YellowRow';\nimport \"./RowList.css\";\nimport ResultsProvider from \"../ResultsProvider\";\n\nconst RowList = () => {\n    const [rowStates, setRowStates] = useState([{'array': [], 'color': \"green\"}, {'array': [], 'color': \"yellow\"}]);\n    const [results, setResults] = useState('');\n\n    const createYellow = () => {\n        if (rowStates.length >= 5) return;\n        setRowStates([...rowStates, {'array': [], 'color': \"yellow\"}]);\n    };\n\n    const deleteYellow = () => {\n        if (rowStates.length <= 2) return;\n        setRowStates(rowStates.slice(0, -1));\n    };\n\n    const handleInputChange = (index, letterList) => {\n      const newRowStates = [...rowStates];\n      newRowStates[index]['array'] = letterList;\n      setRowStates(newRowStates);\n    };\n\n    const getRowComponent = (index) => {\n        if (index === 0) {\n            return <GreenRow key={index} value={rowStates[index]['array']} onChange={(e) => handleInputChange(index, e)} />;\n        } else {\n            return <YellowRow key={index} value={rowStates[index]['array']} onChange={(e) => handleInputChange(index, e)} />;\n        }\n    };\n\n    const getResults = () => {\n        const results = ResultsProvider(rowStates);\n        console.log(results);\n        setResults(results);\n    }\n\n    return(\n        //put into rows\n        <div>\n            <div className=\"row-container\">\n                {/* create elements in rows state */}\n                {rowStates.map((rowState, index) => (\n                    <div key={index}>\n                        {getRowComponent(index)}\n                    </div>\n                ))}\n                <div className=\"result-container\">\n                    {results ? results.map((result) => (\n                        <text style={{color: \"black\"}}>{result}, </text>\n                    ))\n                    :''}\n                </div>\n            </div>\n            <div className=\"button-container\">\n                <button onClick={createYellow}> + </button>\n                <button onClick={deleteYellow}> - </button>\n                <button onClick={getResults}> = </button>\n            </div>\n        </div>\n    );\n}\n\nexport default RowList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}