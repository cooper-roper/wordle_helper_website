{"ast":null,"code":"var _jsxFileName = \"/Users/cooperroper/my_projects/Wordle_Helper/wordle_helper/src/Components/YellowRow/YellowRow.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"./YellowRow.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YellowRow = () => {\n  _s();\n  const [wordList, setWordList] = useState(Array(5).fill(''));\n  const [results, setResults] = useState(\"\");\n  const inputRefs = useRef([]);\n  const handleInputChange = (index, event) => {\n    const newWordList = [...wordList];\n    newWordList[index] = event.target.value.toUpperCase();\n    setWordList(newWordList);\n    if (event.target.value === \"\" && index > 0) {\n      inputRefs.current[index - 1].focus();\n    } else if (event.target.value !== \"\" && index < 4) {\n      inputRefs.current[index + 1].focus();\n    }\n  };\n  useEffect(() => {\n    if (wordList.includes(\"\")) {\n      setResults(\"\");\n      return;\n    }\n    //generate word list\n  }, [wordList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Row\",\n      children: [...Array(5).keys()].map(index => /*#__PURE__*/_jsxDEV(\"input\", {\n        style: YellowRow,\n        ref: ref => inputRefs.current[index] = ref,\n        index: index,\n        value: wordList[index],\n        maxLength: 1,\n        onChange: e => handleInputChange(index, e)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(YellowRow, \"boPeHvSnHyNRsWRhl0u1KYfWa4Y=\");\n_c = YellowRow;\nexport default YellowRow;\nvar _c;\n$RefreshReg$(_c, \"YellowRow\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","YellowRow","_s","wordList","setWordList","Array","fill","results","setResults","inputRefs","handleInputChange","index","event","newWordList","target","value","toUpperCase","current","focus","includes","children","className","keys","map","style","ref","maxLength","onChange","e","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cooperroper/my_projects/Wordle_Helper/wordle_helper/src/Components/YellowRow/YellowRow.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport \"./YellowRow.css\";\n\nconst YellowRow = () => {\n    const [wordList, setWordList] = useState(Array(5).fill(''));\n    const [results, setResults] = useState(\"\");\n    const inputRefs = useRef([]);\n\n    const handleInputChange = (index, event) => {\n        const newWordList = [...wordList];\n        newWordList[index] = event.target.value.toUpperCase();\n        setWordList(newWordList);\n\n        if ((event.target.value === \"\") && index > 0) {\n            inputRefs.current[index - 1].focus();\n        }\n        else if (event.target.value !== \"\" && index < 4) {\n            inputRefs.current[index + 1].focus();\n        }\n    };\n\n    useEffect(() => {\n        if (wordList.includes(\"\")) {\n            setResults(\"\")\n            return;\n        }\n        //generate word list\n\n    }, [wordList]);\n    \n\n    return(\n        <div>\n            <div className=\"Row\">\n                {/* create 5 text input fields using a loop*/}\n                {[...Array(5).keys()].map((index) => (\n                    <input \n                        style={YellowRow}\n                        key={index} \n                        ref={(ref) => (inputRefs.current[index] = ref)}\n                        index={index}\n                        value={wordList[index]} \n                        maxLength={1} \n                        onChange={(e) => handleInputChange(index, e)}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default YellowRow;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAACQ,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;EAC3D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMY,SAAS,GAAGX,MAAM,CAAC,EAAE,CAAC;EAE5B,MAAMY,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IACxC,MAAMC,WAAW,GAAG,CAAC,GAAGV,QAAQ,CAAC;IACjCU,WAAW,CAACF,KAAK,CAAC,GAAGC,KAAK,CAACE,MAAM,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC;IACrDZ,WAAW,CAACS,WAAW,CAAC;IAExB,IAAKD,KAAK,CAACE,MAAM,CAACC,KAAK,KAAK,EAAE,IAAKJ,KAAK,GAAG,CAAC,EAAE;MAC1CF,SAAS,CAACQ,OAAO,CAACN,KAAK,GAAG,CAAC,CAAC,CAACO,KAAK,CAAC,CAAC;IACxC,CAAC,MACI,IAAIN,KAAK,CAACE,MAAM,CAACC,KAAK,KAAK,EAAE,IAAIJ,KAAK,GAAG,CAAC,EAAE;MAC7CF,SAAS,CAACQ,OAAO,CAACN,KAAK,GAAG,CAAC,CAAC,CAACO,KAAK,CAAC,CAAC;IACxC;EACJ,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACZ,IAAIO,QAAQ,CAACgB,QAAQ,CAAC,EAAE,CAAC,EAAE;MACvBX,UAAU,CAAC,EAAE,CAAC;MACd;IACJ;IACA;EAEJ,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAGd,oBACIH,OAAA;IAAAoB,QAAA,eACIpB,OAAA;MAAKqB,SAAS,EAAC,KAAK;MAAAD,QAAA,EAEf,CAAC,GAAGf,KAAK,CAAC,CAAC,CAAC,CAACiB,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAEZ,KAAK,iBAC5BX,OAAA;QACIwB,KAAK,EAAEvB,SAAU;QAEjBwB,GAAG,EAAGA,GAAG,IAAMhB,SAAS,CAACQ,OAAO,CAACN,KAAK,CAAC,GAAGc,GAAK;QAC/Cd,KAAK,EAAEA,KAAM;QACbI,KAAK,EAAEZ,QAAQ,CAACQ,KAAK,CAAE;QACvBe,SAAS,EAAE,CAAE;QACbC,QAAQ,EAAGC,CAAC,IAAKlB,iBAAiB,CAACC,KAAK,EAAEiB,CAAC;MAAE,GALxCjB,KAAK;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMb,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC9B,EAAA,CA9CID,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AAgDf,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}