{"ast":null,"code":"var _jsxFileName = \"/Users/cooperroper/my_projects/Wordle_Helper/wordle_helper/src/Components/Keyboard/Keyboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Keyboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VirtualKeyboard = _ref => {\n  _s();\n  let {\n    handleClick\n  } = _ref;\n  const keys = [[\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\"], [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\"], [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\"]];\n  const [keyStates, setKeyStates] = useState(keys.reduce((acc, cur) => {\n    return {\n      ...acc,\n      ...cur.reduce((acc2, cur2) => ({\n        ...acc2,\n        [cur2]: false\n      }), {})\n    };\n  }, {}));\n  const handleKeyClick = key => {\n    setKeyStates(prevState => ({\n      ...prevState,\n      [key]: !prevState[key]\n    }));\n    handleClick(key);\n  };\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"virtual-keyboard\",\n    readOnly: true,\n    children: keys.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard-row\",\n      children: row.map((key, keyIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: keyStates[key] ? \"keyboard-key pressed\" : \"keyboard-key\",\n        onClick: () => handleKeyClick(key),\n        children: key\n      }, keyIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(VirtualKeyboard, \"NtsNVQ32KJLc40pye39RtQHOgng=\");\n_c = VirtualKeyboard;\nexport default VirtualKeyboard;\nvar _c;\n$RefreshReg$(_c, \"VirtualKeyboard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","VirtualKeyboard","_ref","_s","handleClick","keys","keyStates","setKeyStates","reduce","acc","cur","acc2","cur2","handleKeyClick","key","prevState","className","readOnly","children","map","row","rowIndex","keyIndex","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cooperroper/my_projects/Wordle_Helper/wordle_helper/src/Components/Keyboard/Keyboard.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Keyboard.css\";\n\nconst VirtualKeyboard = ({ handleClick }) => {\n  const keys = [\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\"],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\"],\n  ];\n\n  const [keyStates, setKeyStates] = useState(\n    keys.reduce((acc, cur) => {\n      return { ...acc, ...cur.reduce((acc2, cur2) => ({ ...acc2, [cur2]: false }), {}) };\n    }, {})\n  );\n\n  const handleKeyClick = (key) => {\n    setKeyStates((prevState) => ({ ...prevState, [key]: !prevState[key] }));\n    handleClick(key);\n  };\n\n  return (\n    <input className=\"virtual-keyboard\" readOnly>\n      {keys.map((row, rowIndex) => (\n        <div key={rowIndex} className=\"keyboard-row\">\n          {row.map((key, keyIndex) => (\n            <button\n              key={keyIndex}\n              className={keyStates[key] ? \"keyboard-key pressed\" : \"keyboard-key\"}\n              onClick={() => handleKeyClick(key)}\n            >\n              {key}\n            </button>\n          ))}\n        </div>\n      ))}\n    </input>\n  );\n};\n\nexport default VirtualKeyboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,eAAe,GAAGC,IAAA,IAAqB;EAAAC,EAAA;EAAA,IAApB;IAAEC;EAAY,CAAC,GAAAF,IAAA;EACtC,MAAMG,IAAI,GAAG,CACX,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAClD,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAC7C,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CACpC;EAED,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CACxCO,IAAI,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;IACxB,OAAO;MAAE,GAAGD,GAAG;MAAE,GAAGC,GAAG,CAACF,MAAM,CAAC,CAACG,IAAI,EAAEC,IAAI,MAAM;QAAE,GAAGD,IAAI;QAAE,CAACC,IAAI,GAAG;MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;IAAE,CAAC;EACpF,CAAC,EAAE,CAAC,CAAC,CACP,CAAC;EAED,MAAMC,cAAc,GAAIC,GAAG,IAAK;IAC9BP,YAAY,CAAEQ,SAAS,KAAM;MAAE,GAAGA,SAAS;MAAE,CAACD,GAAG,GAAG,CAACC,SAAS,CAACD,GAAG;IAAE,CAAC,CAAC,CAAC;IACvEV,WAAW,CAACU,GAAG,CAAC;EAClB,CAAC;EAED,oBACEd,OAAA;IAAOgB,SAAS,EAAC,kBAAkB;IAACC,QAAQ;IAAAC,QAAA,EACzCb,IAAI,CAACc,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,kBACtBrB,OAAA;MAAoBgB,SAAS,EAAC,cAAc;MAAAE,QAAA,EACzCE,GAAG,CAACD,GAAG,CAAC,CAACL,GAAG,EAAEQ,QAAQ,kBACrBtB,OAAA;QAEEgB,SAAS,EAAEV,SAAS,CAACQ,GAAG,CAAC,GAAG,sBAAsB,GAAG,cAAe;QACpES,OAAO,EAAEA,CAAA,KAAMV,cAAc,CAACC,GAAG,CAAE;QAAAI,QAAA,EAElCJ;MAAG,GAJCQ,QAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKP,CACT;IAAC,GATMN,QAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUb,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEZ,CAAC;AAACxB,EAAA,CAnCIF,eAAe;AAAA2B,EAAA,GAAf3B,eAAe;AAqCrB,eAAeA,eAAe;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}