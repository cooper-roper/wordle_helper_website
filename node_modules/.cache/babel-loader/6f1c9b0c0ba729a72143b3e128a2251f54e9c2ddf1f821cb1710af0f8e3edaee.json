{"ast":null,"code":"var _jsxFileName = \"/Users/cooperroper/my_projects/Wordle_Helper/wordle_helper/src/Components/Row/Row.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport \"./Row.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Row = _ref => {\n  _s();\n  let {\n    value,\n    onChange,\n    color\n  } = _ref;\n  const inputRefs = useRef([]);\n  const handleKeyDown = (index, event) => {\n    const {\n      key\n    } = event;\n    console.log(key);\n    if ((key === \"ArrowLeft\" || key === \"Backspace\") && index > 0) {\n      inputRefs.current[index - 1].focus();\n    } else if (key === \"ArrowRight\" && index < 4) {\n      inputRefs.current[index + 1].focus();\n    } else if (key.isAlpha() && index < 4) {\n      const newValue = [...value];\n      newValue[index] = key.toUpperCase();\n      onChange(newValue);\n      if (newValue[index] !== \"\" && index < 4) {\n        inputRefs.current[index + 1].focus();\n      }\n    }\n  };\n  useEffect(() => {\n    if (color === \"green\") inputRefs.current[0].focus();\n  }, [color]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Row\",\n      children: [...Array(5).keys()].map(index => /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"Input\",\n        style: {\n          backgroundColor: \"light\" + color\n        },\n        ref: ref => inputRefs.current[index] = ref,\n        index: index,\n        value: value[index],\n        maxLength: 1,\n        onKeyDown: e => handleKeyDown(index, e)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Row, \"KbBMijb38wIYom9D23LsjYZTGu4=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Row","_ref","_s","value","onChange","color","inputRefs","handleKeyDown","index","event","key","console","log","current","focus","isAlpha","newValue","toUpperCase","children","className","Array","keys","map","style","backgroundColor","ref","maxLength","onKeyDown","e","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cooperroper/my_projects/Wordle_Helper/wordle_helper/src/Components/Row/Row.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport \"./Row.css\";\n\nconst Row = ({ value, onChange, color }) => {\n    const inputRefs = useRef([]);\n\n    const handleKeyDown = (index, event) => {\n        const { key } = event;\n        console.log(key)\n        if ((key === \"ArrowLeft\" || key === \"Backspace\")  && index > 0) {\n          inputRefs.current[index - 1].focus();\n        } else if (key === \"ArrowRight\" && index < 4) {\n          inputRefs.current[index + 1].focus();\n        } else if (key.isAlpha() && index < 4) {\n            const newValue = [...value];\n            newValue[index] = key.toUpperCase();\n            onChange(newValue);\n            if (newValue[index] !== \"\" && index < 4) {\n                inputRefs.current[index + 1].focus();\n            }\n        }\n      };\n\n    useEffect(() => {\n        if (color === \"green\")\n            inputRefs.current[0].focus();\n    }, [color]);\n    \n\n    return(\n        <div>\n            <div className=\"Row\">\n                {/* create 5 text input fields using a loop*/}\n                {[...Array(5).keys()].map((index) => (\n                    <input \n                        className=\"Input\"\n                        style={{backgroundColor: \"light\"+color}}\n                        key={index} \n                        ref={(ref) => (inputRefs.current[index] = ref)}\n                        index={index}\n                        value={value[index]} \n                        maxLength={1} \n                        onKeyDown={(e) => handleKeyDown(index, e)}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Row;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGC,IAAA,IAAgC;EAAAC,EAAA;EAAA,IAA/B;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAM,CAAC,GAAAJ,IAAA;EACnC,MAAMK,SAAS,GAAGT,MAAM,CAAC,EAAE,CAAC;EAE5B,MAAMU,aAAa,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IACpC,MAAM;MAAEC;IAAI,CAAC,GAAGD,KAAK;IACrBE,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChB,IAAI,CAACA,GAAG,KAAK,WAAW,IAAIA,GAAG,KAAK,WAAW,KAAMF,KAAK,GAAG,CAAC,EAAE;MAC9DF,SAAS,CAACO,OAAO,CAACL,KAAK,GAAG,CAAC,CAAC,CAACM,KAAK,CAAC,CAAC;IACtC,CAAC,MAAM,IAAIJ,GAAG,KAAK,YAAY,IAAIF,KAAK,GAAG,CAAC,EAAE;MAC5CF,SAAS,CAACO,OAAO,CAACL,KAAK,GAAG,CAAC,CAAC,CAACM,KAAK,CAAC,CAAC;IACtC,CAAC,MAAM,IAAIJ,GAAG,CAACK,OAAO,CAAC,CAAC,IAAIP,KAAK,GAAG,CAAC,EAAE;MACnC,MAAMQ,QAAQ,GAAG,CAAC,GAAGb,KAAK,CAAC;MAC3Ba,QAAQ,CAACR,KAAK,CAAC,GAAGE,GAAG,CAACO,WAAW,CAAC,CAAC;MACnCb,QAAQ,CAACY,QAAQ,CAAC;MAClB,IAAIA,QAAQ,CAACR,KAAK,CAAC,KAAK,EAAE,IAAIA,KAAK,GAAG,CAAC,EAAE;QACrCF,SAAS,CAACO,OAAO,CAACL,KAAK,GAAG,CAAC,CAAC,CAACM,KAAK,CAAC,CAAC;MACxC;IACJ;EACF,CAAC;EAEHlB,SAAS,CAAC,MAAM;IACZ,IAAIS,KAAK,KAAK,OAAO,EACjBC,SAAS,CAACO,OAAO,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;EACpC,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;EAGX,oBACIN,OAAA;IAAAmB,QAAA,eACInB,OAAA;MAAKoB,SAAS,EAAC,KAAK;MAAAD,QAAA,EAEf,CAAC,GAAGE,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAEd,KAAK,iBAC5BT,OAAA;QACIoB,SAAS,EAAC,OAAO;QACjBI,KAAK,EAAE;UAACC,eAAe,EAAE,OAAO,GAACnB;QAAK,CAAE;QAExCoB,GAAG,EAAGA,GAAG,IAAMnB,SAAS,CAACO,OAAO,CAACL,KAAK,CAAC,GAAGiB,GAAK;QAC/CjB,KAAK,EAAEA,KAAM;QACbL,KAAK,EAAEA,KAAK,CAACK,KAAK,CAAE;QACpBkB,SAAS,EAAE,CAAE;QACbC,SAAS,EAAGC,CAAC,IAAKrB,aAAa,CAACC,KAAK,EAAEoB,CAAC;MAAE,GALrCpB,KAAK;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMb,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC9B,EAAA,CA7CIF,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AA+CT,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}