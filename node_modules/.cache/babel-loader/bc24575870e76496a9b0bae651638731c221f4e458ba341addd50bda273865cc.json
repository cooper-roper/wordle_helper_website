{"ast":null,"code":"var _jsxFileName = \"/Users/cooperroper/my_projects/Wordle_Helper/wordle_helper/src/Components/Row/Row.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport \"./Row.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Row = _ref => {\n  _s();\n  let {\n    value,\n    onChange,\n    color,\n    isFocused,\n    column\n  } = _ref;\n  const inputRefs = useRef([]);\n  const isAlpha = function (ch) {\n    return /^[A-Z]$/i.test(ch);\n  };\n  const handleKeyDown = (index, event) => {\n    const {\n      key\n    } = event;\n    if (key === \"ArrowLeft\" && index > 0) {\n      inputRefs.current[index - 1].focus();\n    } else if (key === \"ArrowRight\" && index < 4) {\n      inputRefs.current[index + 1].focus();\n    } else if (key === \"Backspace\") {\n      const newValue = [...value];\n      newValue[index] = \"\";\n      onChange(newValue);\n      if (index > 0) inputRefs.current[index - 1].focus();\n    }\n  };\n  const handleKeyUp = (index, event) => {\n    const {\n      key\n    } = event;\n    if (isAlpha(key)) {\n      const newValue = [...value];\n      newValue[index] = key;\n      onChange(newValue);\n      if (index < 4) inputRefs.current[index + 1].focus();\n    }\n  };\n  useEffect(() => {\n    if (color === \"green\" || isFocused) inputRefs.current[column].focus();\n  }, [color, isFocused]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Row\",\n      children: [...Array(5).keys()].map(index => /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"Input\",\n        style: {\n          backgroundColor: \"light\" + color,\n          textTransform: \"uppercase\"\n        },\n        ref: ref => inputRefs.current[index] = ref,\n        index: index,\n        value: value[index],\n        maxLength: 1,\n        onKeyDown: e => handleKeyDown(index, e),\n        onKeyUp: e => handleKeyUp(index, e)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(Row, \"KbBMijb38wIYom9D23LsjYZTGu4=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Row","_ref","_s","value","onChange","color","isFocused","column","inputRefs","isAlpha","ch","test","handleKeyDown","index","event","key","current","focus","newValue","handleKeyUp","children","className","Array","keys","map","style","backgroundColor","textTransform","ref","maxLength","onKeyDown","e","onKeyUp","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cooperroper/my_projects/Wordle_Helper/wordle_helper/src/Components/Row/Row.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport \"./Row.css\";\n\nconst Row = ({ value, onChange, color, isFocused, column }) => {\n    const inputRefs = useRef([]);\n\n    const isAlpha = function(ch){\n        return /^[A-Z]$/i.test(ch);\n    }\n\n    const handleKeyDown = (index, event) => {\n        const { key } = event;\n        if (key === \"ArrowLeft\"  && index > 0) {\n          inputRefs.current[index - 1].focus();\n        } \n        else if (key === \"ArrowRight\" && index < 4) {\n          inputRefs.current[index + 1].focus();\n        } \n        else if (key === \"Backspace\"){\n            const newValue = [...value];\n            newValue[index] = \"\";\n            onChange(newValue);\n            if (index > 0) inputRefs.current[index - 1].focus();\n        } \n      };   \n\n      const handleKeyUp = (index, event) => {\n        const { key } = event;\n        if (isAlpha(key)) {\n          const newValue = [...value];\n          newValue[index] = key;\n          onChange(newValue);\n          if (index < 4) inputRefs.current[index + 1].focus();\n        }\n      };\n\n    useEffect(() => {\n        if (color === \"green\" || isFocused)\n            inputRefs.current[column].focus();\n    }, [color, isFocused]);\n    \n\n    return(\n        <div>\n            <div className=\"Row\">\n                {/* create 5 text input fields using a loop*/}\n                {[...Array(5).keys()].map((index) => (\n                    <input \n                        className=\"Input\"\n                        style={{backgroundColor: \"light\"+color, textTransform: \"uppercase\"}}\n                        key={index} \n                        ref={(ref) => (inputRefs.current[index] = ref)}\n                        index={index}\n                        value={value[index]} \n                        maxLength={1} \n                        onKeyDown={(e) => handleKeyDown(index, e)}\n                        onKeyUp={(e) => handleKeyUp(index, e)}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Row;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}