{"ast":null,"code":"var _jsxFileName = \"/Users/cooperroper/my_projects/Wordle_Helper/wordle_helper/src/Components/Row/Row.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"./Row.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Row = () => {\n  _s();\n  const [wordList, setWordList] = useState(Array(5).fill(''));\n  const inputRefs = useRef([]);\n  const handleInputChange = (index, event) => {\n    const newWordList = [...wordList];\n    newWordList[index] = event.target.value.toUpperCase();\n    setWordList(newWordList);\n    if (event.target.value === '' && event.keyCode === 8 && index > 0) {\n      const previousInput = event.target.parentNode.children[index - 1].children[0];\n      previousInput.focus();\n      previousInput.select();\n    } else if (index < 4 && event.target.value !== '') {\n      const nextInput = event.target.parentNode.children[index + 1].children[0];\n      nextInput.focus();\n      nextInput.select();\n    }\n  };\n  useEffect(() => {\n    inputRefs.current[0].focus();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Row\",\n    children: [...Array(5).keys()].map(index => /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: ref => inputRefs.current[index] = ref,\n      index: index,\n      value: wordList[index],\n      maxLength: 1,\n      onChange: e => handleInputChange(index, e)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Row, \"5qFubpbEYp1q2KDklq3jl16Ivzs=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","Row","_s","wordList","setWordList","Array","fill","inputRefs","handleInputChange","index","event","newWordList","target","value","toUpperCase","keyCode","previousInput","parentNode","children","focus","select","nextInput","current","className","keys","map","ref","maxLength","onChange","e","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cooperroper/my_projects/Wordle_Helper/wordle_helper/src/Components/Row/Row.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport \"./Row.css\";\n\nconst Row = () => {\n    const [wordList, setWordList] = useState(Array(5).fill(''));\n    const inputRefs = useRef([]);\n\n    const handleInputChange = (index, event) => {\n        const newWordList = [...wordList];\n        newWordList[index] = event.target.value.toUpperCase();\n        setWordList(newWordList);\n\n        if (event.target.value === '' && event.keyCode === 8 && index > 0) {\n            const previousInput = event.target.parentNode.children[index - 1].children[0];\n            previousInput.focus();\n            previousInput.select();\n        } \n        else if (index < 4 && event.target.value !== '') {\n            const nextInput = event.target.parentNode.children[index + 1].children[0];\n            nextInput.focus();\n            nextInput.select();\n        }\n    };\n\n    useEffect(() => {\n        inputRefs.current[0].focus();\n    }, []);\n    \n\n    return(\n        <div className=\"Row\">\n            {/* create 5 text input fields using a loop*/}\n            {[...Array(5).keys()].map((index) => (\n                <input \n                    key={index} \n                    ref={(ref) => (inputRefs.current[index] = ref)}\n                    index={index}\n                    value={wordList[index]} \n                    maxLength={1} \n                    onChange={(e) => handleInputChange(index, e)}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default Row;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAACQ,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;EAC3D,MAAMC,SAAS,GAAGT,MAAM,CAAC,EAAE,CAAC;EAE5B,MAAMU,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IACxC,MAAMC,WAAW,GAAG,CAAC,GAAGR,QAAQ,CAAC;IACjCQ,WAAW,CAACF,KAAK,CAAC,GAAGC,KAAK,CAACE,MAAM,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC;IACrDV,WAAW,CAACO,WAAW,CAAC;IAExB,IAAID,KAAK,CAACE,MAAM,CAACC,KAAK,KAAK,EAAE,IAAIH,KAAK,CAACK,OAAO,KAAK,CAAC,IAAIN,KAAK,GAAG,CAAC,EAAE;MAC/D,MAAMO,aAAa,GAAGN,KAAK,CAACE,MAAM,CAACK,UAAU,CAACC,QAAQ,CAACT,KAAK,GAAG,CAAC,CAAC,CAACS,QAAQ,CAAC,CAAC,CAAC;MAC7EF,aAAa,CAACG,KAAK,CAAC,CAAC;MACrBH,aAAa,CAACI,MAAM,CAAC,CAAC;IAC1B,CAAC,MACI,IAAIX,KAAK,GAAG,CAAC,IAAIC,KAAK,CAACE,MAAM,CAACC,KAAK,KAAK,EAAE,EAAE;MAC7C,MAAMQ,SAAS,GAAGX,KAAK,CAACE,MAAM,CAACK,UAAU,CAACC,QAAQ,CAACT,KAAK,GAAG,CAAC,CAAC,CAACS,QAAQ,CAAC,CAAC,CAAC;MACzEG,SAAS,CAACF,KAAK,CAAC,CAAC;MACjBE,SAAS,CAACD,MAAM,CAAC,CAAC;IACtB;EACJ,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACZW,SAAS,CAACe,OAAO,CAAC,CAAC,CAAC,CAACH,KAAK,CAAC,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAGN,oBACInB,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAL,QAAA,EAEf,CAAC,GAAGb,KAAK,CAAC,CAAC,CAAC,CAACmB,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAEhB,KAAK,iBAC5BT,OAAA;MAEI0B,GAAG,EAAGA,GAAG,IAAMnB,SAAS,CAACe,OAAO,CAACb,KAAK,CAAC,GAAGiB,GAAK;MAC/CjB,KAAK,EAAEA,KAAM;MACbI,KAAK,EAAEV,QAAQ,CAACM,KAAK,CAAE;MACvBkB,SAAS,EAAE,CAAE;MACbC,QAAQ,EAAGC,CAAC,IAAKrB,iBAAiB,CAACC,KAAK,EAAEoB,CAAC;IAAE,GALxCpB,KAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMb,CACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAC/B,EAAA,CAzCID,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AA2CT,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}