{"ast":null,"code":"var _jsxFileName = \"/Users/cooperroper/my_projects/Wordle_Helper/wordle_helper/src/Components/Row/Row.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport \"./Row.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Row = _ref => {\n  _s();\n  let {\n    value,\n    onChange,\n    color,\n    isFocused,\n    column\n  } = _ref;\n  const inputRefs = useRef([]);\n  useEffect(() => {\n    if (isFocused) inputRefs.current[column].focus();\n  }, [isFocused, column]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Row\",\n      children: [...Array(5).keys()].map(index => /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"Input\",\n        style: {\n          backgroundColor: \"light\" + color,\n          textTransform: \"uppercase\"\n        },\n        ref: ref => inputRefs.current[index] = ref,\n        index: index,\n        value: value[index],\n        pattern: \"[a-zA-Z]+\",\n        maxLength: 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(Row, \"KbBMijb38wIYom9D23LsjYZTGu4=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Row","_ref","_s","value","onChange","color","isFocused","column","inputRefs","current","focus","children","className","Array","keys","map","index","style","backgroundColor","textTransform","ref","pattern","maxLength","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cooperroper/my_projects/Wordle_Helper/wordle_helper/src/Components/Row/Row.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport \"./Row.css\";\n\nconst Row = ({ value, onChange, color, isFocused, column }) => {\n    const inputRefs = useRef([]);\n\n    useEffect(() => {\n        if (isFocused)\n            inputRefs.current[column].focus();\n    }, [isFocused, column]);\n    \n\n    return(\n        <div>\n            <div className=\"Row\">\n                {/* create 5 text input fields using a loop*/}\n                {[...Array(5).keys()].map((index) => (\n                    <input \n                        className=\"Input\"\n                        style={{backgroundColor: \"light\"+color, textTransform: \"uppercase\"}}\n                        key={index} \n                        ref={(ref) => (inputRefs.current[index] = ref)}\n                        index={index}\n                        value={value[index]} \n                        pattern=\"[a-zA-Z]+\"\n                        maxLength={1} \n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Row;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGC,IAAA,IAAmD;EAAAC,EAAA;EAAA,IAAlD;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,KAAK;IAAEC,SAAS;IAAEC;EAAO,CAAC,GAAAN,IAAA;EACtD,MAAMO,SAAS,GAAGX,MAAM,CAAC,EAAE,CAAC;EAE5BD,SAAS,CAAC,MAAM;IACZ,IAAIU,SAAS,EACTE,SAAS,CAACC,OAAO,CAACF,MAAM,CAAC,CAACG,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,CAACJ,SAAS,EAAEC,MAAM,CAAC,CAAC;EAGvB,oBACIR,OAAA;IAAAY,QAAA,eACIZ,OAAA;MAAKa,SAAS,EAAC,KAAK;MAAAD,QAAA,EAEf,CAAC,GAAGE,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAEC,KAAK,iBAC5BjB,OAAA;QACIa,SAAS,EAAC,OAAO;QACjBK,KAAK,EAAE;UAACC,eAAe,EAAE,OAAO,GAACb,KAAK;UAAEc,aAAa,EAAE;QAAW,CAAE;QAEpEC,GAAG,EAAGA,GAAG,IAAMZ,SAAS,CAACC,OAAO,CAACO,KAAK,CAAC,GAAGI,GAAK;QAC/CJ,KAAK,EAAEA,KAAM;QACbb,KAAK,EAAEA,KAAK,CAACa,KAAK,CAAE;QACpBK,OAAO,EAAC,WAAW;QACnBC,SAAS,EAAE;MAAE,GALRN,KAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMb,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACxB,EAAA,CA5BIF,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AA8BT,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}